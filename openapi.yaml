openapi: 3.0.0
info:
  title: Daily Journal API
  version: 1.0.0
  description: A simple API for managing daily journal entries and users with authentication

servers:
  - url: https://cse341-rlcp.onrender.com
    description: Production server
  - url: http://localhost:3000
    description: Local development server
  - url: http://localhost:3001
    description: Alternative local server (port 3001)
  - url: http://localhost:3002
    description: Alternative local server (port 3002)
  - url: http://localhost:3003
    description: Alternative local server (port 3003)
  - url: http://localhost:3004
    description: Alternative local server (port 3004)
  - url: http://localhost:3005
    description: Alternative local server (port 3005)

components:
  schemas:
    Journal:
      type: object
      required:
        - title
        - content
      properties:
        _id:
          type: string
          description: The auto-generated id of the journal entry
        title:
          type: string
          description: The title of the journal entry
          maxLength: 100
        content:
          type: string
          description: The content of the journal entry
        mood:
          type: string
          description: The mood associated with the entry
          enum:
            # Positive moods
            - happy
            - joyful
            - excited
            - enthusiastic
            - grateful
            - peaceful
            - content
            - energetic
            - inspired
            - proud
            - optimistic
            - relaxed
            - motivated
            - confident
            - cheerful
            - loved
            - blessed
            - accomplished
            # Neutral moods
            - neutral
            - calm
            - focused
            - thoughtful
            - contemplative
            - balanced
            - mindful
            - present
            - centered
            - curious
            - reflective
            # Challenging moods
            - sad
            - angry
            - frustrated
            - anxious
            - stressed
            - tired
            - overwhelmed
            - disappointed
            - worried
            - confused
            - lonely
            - nervous
            - irritable
            - restless
            - melancholy
            - exhausted
          default: neutral
        date:
          type: string
          format: date-time
          description: The date of the entry
        userId:
          type: string
          description: The ID of the user who created the entry
        createdAt:
          type: string
          format: date-time
          description: The creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: The last update timestamp

    User:
      type: object
      required:
        - username
        - email
      properties:
        _id:
          type: string
          description: The auto-generated id of the user
        username:
          type: string
          description: The username of the user
          minLength: 3
          maxLength: 30
        email:
          type: string
          format: email
          description: The email address of the user
        password:
          type: string
          description: The password of the user (min 6 characters)
          minLength: 6
        googleId:
          type: string
          description: Google OAuth ID for the user
        githubId:
          type: string
          description: GitHub OAuth ID for the user
        role:
          type: string
          enum: [user, admin]
          default: user
          description: The role of the user
        isActive:
          type: boolean
          default: true
          description: Whether the user account is active
        lastLogin:
          type: string
          format: date-time
          description: The last login timestamp
        preferences:
          type: object
          properties:
            theme:
              type: string
              enum: [light, dark]
              default: light
            notifications:
              type: boolean
              default: true
            language:
              type: string
              default: en
        createdAt:
          type: string
          format: date-time
          description: The creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: The last update timestamp

    AuthResponse:
      type: object
      properties:
        message:
          type: string
        token:
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
        - token
        - user

    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
      required:
        - error

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    githubAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://github.com/login/oauth/authorize
          tokenUrl: https://github.com/login/oauth/access_token
          scopes:
            user:email: Read user email
            read:user: Read user profile

paths:
  /api/auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  minLength: 3
                  maxLength: 30
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/auth/login:
    post:
      summary: Login user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/auth/google:
    get:
      summary: Authenticate with Google
      tags: [Auth]
      responses:
        '302':
          description: Redirect to Google login

  /api/auth/google/callback:
    get:
      summary: Google OAuth callback
      tags: [Auth]
      responses:
        '200':
          description: Google authentication successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Google authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/auth/github:
    get:
      summary: Authenticate with GitHub
      tags: [Auth]
      responses:
        '302':
          description: Redirect to GitHub login

  /api/auth/github/callback:
    get:
      summary: GitHub OAuth callback
      tags: [Auth]
      responses:
        '200':
          description: GitHub authentication successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: GitHub authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/auth/logout:
    post:
      summary: Logout user
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/auth/me:
    get:
      summary: Get current user
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/journal:
    get:
      summary: Get all journal entries
      tags: [Journal]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of journal entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Journal'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create a new journal entry
      tags: [Journal]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - content
              properties:
                title:
                  type: string
                  maxLength: 100
                content:
                  type: string
                mood:
                  type: string
                  enum:
                    - happy
                    - joyful
                    - excited
                    - enthusiastic
                    - grateful
                    - peaceful
                    - content
                    - energetic
                    - inspired
                    - proud
                    - optimistic
                    - relaxed
                    - motivated
                    - confident
                    - cheerful
                    - loved
                    - blessed
                    - accomplished
                    - neutral
                    - calm
                    - focused
                    - thoughtful
                    - contemplative
                    - balanced
                    - mindful
                    - present
                    - centered
                    - curious
                    - reflective
                    - sad
                    - angry
                    - frustrated
                    - anxious
                    - stressed
                    - tired
                    - overwhelmed
                    - disappointed
                    - worried
                    - confused
                    - lonely
                    - nervous
                    - irritable
                    - restless
                    - melancholy
                    - exhausted
                  default: neutral
      responses:
        '201':
          description: Journal entry created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Journal'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/journal/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: Journal entry ID

    get:
      summary: Get a journal entry by ID
      tags: [Journal]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Journal entry retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Journal'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Journal entry not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update a journal entry
      tags: [Journal]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  maxLength: 100
                content:
                  type: string
                mood:
                  type: string
                  enum:
                    - happy
                    - joyful
                    - excited
                    - enthusiastic
                    - grateful
                    - peaceful
                    - content
                    - energetic
                    - inspired
                    - proud
                    - optimistic
                    - relaxed
                    - motivated
                    - confident
                    - cheerful
                    - loved
                    - blessed
                    - accomplished
                    - neutral
                    - calm
                    - focused
                    - thoughtful
                    - contemplative
                    - balanced
                    - mindful
                    - present
                    - centered
                    - curious
                    - reflective
                    - sad
                    - angry
                    - frustrated
                    - anxious
                    - stressed
                    - tired
                    - overwhelmed
                    - disappointed
                    - worried
                    - confused
                    - lonely
                    - nervous
                    - irritable
                    - restless
                    - melancholy
                    - exhausted
      responses:
        '200':
          description: Journal entry updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Journal'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Journal entry not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete a journal entry
      tags: [Journal]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Journal entry deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Journal entry not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/users:
    get:
      summary: Returns all users (requires authentication)
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    post:
      summary: Create a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: The created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
        '500':
          description: Server error

  /api/users/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: User ID

    get:
      summary: Returns a user by ID (requires authentication)
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A single user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    put:
      summary: Update a user by ID (requires authentication)
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: The updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                        param:
                          type: string
                        location:
                          type: string
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Server error

    delete:
      summary: Delete a user by ID (requires authentication)
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
        '404':
          description: User not found
        '500':
          description: Server error 